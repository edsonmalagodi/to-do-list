{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Malagodi\\\\Documents\\\\GitHub\\\\todo-list\\\\src\\\\components\\\\TodoList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Todo from './Todo';\nimport TodoForm from './TodoForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction TodoList() {\n  _s();\n\n  const [todos, setTodos] = useState([]);\n\n  const addTodo = todo => {\n    if (!todo.text || /^\\s*$/.test(todo.text)) {\n      return;\n    }\n\n    const newTodos = [todo, ...todos];\n    setTodos(newTodos);\n  };\n\n  const updateTodo = (todoId, newValue) => {\n    if (!newValew.text || /^\\s*$/.test(newValeu.text)) {\n      return;\n    }\n\n    setTodos(prev => prev.map(item => item.id === todoId ? newValue : item));\n  };\n\n  const removeTodo = id => {\n    const removeArr = [...todos].filter(todo => todo.id !== id);\n    setTodos(removeArr);\n  };\n\n  const completeTodo = id => {\n    let updatedTodos = todos.map(todo => {\n      if (todo.id === id) {\n        todo.isComplete = !todo.isComplete;\n      }\n\n      return todo;\n    });\n    setTodos(updatedTodos);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"To do List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TodoForm, {\n      onSubmit: addTodo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(Todo, {\n      todos: todos,\n      completeTodo: completeTodo,\n      removeTodo: removeTodo,\n      updateTodo: updateTodo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 6\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n}\n\n_s(TodoList, \"ZATHeV9x55jFrDOww2hwcxQ3V1U=\");\n\n_c = TodoList;\nexport default TodoList;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"sources":["C:/Users/Malagodi/Documents/GitHub/todo-list/src/components/TodoList.js"],"names":["React","useState","Todo","TodoForm","TodoList","todos","setTodos","addTodo","todo","text","test","newTodos","updateTodo","todoId","newValue","newValew","newValeu","prev","map","item","id","removeTodo","removeArr","filter","completeTodo","updatedTodos","isComplete"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,QAAP,MAAqB,YAArB;;;AAEA,SAASC,QAAT,GAAoB;AAAA;;AAEnB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,EAAD,CAAlC;;AAEA,QAAMM,OAAO,GAAGC,IAAI,IAAI;AACvB,QAAG,CAACA,IAAI,CAACC,IAAN,IAAc,QAAQC,IAAR,CAAaF,IAAI,CAACC,IAAlB,CAAjB,EAAyC;AACxC;AACA;;AAED,UAAME,QAAQ,GAAG,CAACH,IAAD,EAAO,GAAGH,KAAV,CAAjB;AACAC,IAAAA,QAAQ,CAACK,QAAD,CAAR;AACA,GAPD;;AASA,QAAMC,UAAU,GAAG,CAACC,MAAD,EAASC,QAAT,KAAsB;AACxC,QAAG,CAACC,QAAQ,CAACN,IAAV,IAAkB,QAAQC,IAAR,CAAaM,QAAQ,CAACP,IAAtB,CAArB,EAAiD;AAChD;AACA;;AAEDH,IAAAA,QAAQ,CAACW,IAAI,IAAIA,IAAI,CAACC,GAAL,CAASC,IAAI,IAAKA,IAAI,CAACC,EAAL,KAAYP,MAAZ,GAAqBC,QAArB,GAAgCK,IAAlD,CAAT,CAAR;AACA,GAND;;AASA,QAAME,UAAU,GAAGD,EAAE,IAAI;AACxB,UAAME,SAAS,GAAG,CAAC,GAAGjB,KAAJ,EAAWkB,MAAX,CAAkBf,IAAI,IAAIA,IAAI,CAACY,EAAL,KAAaA,EAAvC,CAAlB;AAEAd,IAAAA,QAAQ,CAACgB,SAAD,CAAR;AACA,GAJD;;AAMA,QAAME,YAAY,GAAGJ,EAAE,IAAI;AAC1B,QAAIK,YAAY,GAAGpB,KAAK,CAACa,GAAN,CAAUV,IAAI,IAAI;AACpC,UAAGA,IAAI,CAACY,EAAL,KAAYA,EAAf,EAAkB;AACjBZ,QAAAA,IAAI,CAACkB,UAAL,GAAkB,CAAClB,IAAI,CAACkB,UAAxB;AACA;;AACD,aAAOlB,IAAP;AACA,KALkB,CAAnB;AAMAF,IAAAA,QAAQ,CAACmB,YAAD,CAAR;AACA,GARD;;AAUG,sBACI;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEH,QAAC,QAAD;AAAU,MAAA,QAAQ,EAAElB;AAApB;AAAA;AAAA;AAAA;AAAA,YAFG,eAGH,QAAC,IAAD;AAAM,MAAA,KAAK,EAAEF,KAAb;AAAoB,MAAA,YAAY,EAAEmB,YAAlC;AAAgD,MAAA,UAAU,EAAGH,UAA7D;AACA,MAAA,UAAU,EAAET;AADZ;AAAA;AAAA;AAAA;AAAA,YAHG;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAQH;;GA9CQR,Q;;KAAAA,Q;AAgDT,eAAeA,QAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport Todo from './Todo';\r\nimport TodoForm from './TodoForm';\r\n\r\nfunction TodoList() {\r\n\r\n\tconst [todos, setTodos] = useState([]);\r\n\r\n\tconst addTodo = todo => {\r\n\t\tif(!todo.text || /^\\s*$/.test(todo.text)){\r\n\t\t\treturn\r\n\t\t}\r\n\r\n\t\tconst newTodos = [todo, ...todos]\r\n\t\tsetTodos(newTodos)\r\n\t};\r\n\r\n\tconst updateTodo = (todoId, newValue) => {\r\n\t\tif(!newValew.text || /^\\s*$/.test(newValeu.text)){\r\n\t\t\treturn\r\n\t\t}\r\n\r\n\t\tsetTodos(prev => prev.map(item => (item.id === todoId ? newValue : item)));\r\n\t};\r\n\r\n\r\n\tconst removeTodo = id => {\r\n\t\tconst removeArr = [...todos].filter(todo => todo.id  !== id);\r\n\r\n\t\tsetTodos(removeArr)\r\n\t}; \r\n\r\n\tconst completeTodo = id => {\r\n\t\tlet updatedTodos = todos.map(todo => {\r\n\t\t\tif(todo.id === id){\r\n\t\t\t\ttodo.isComplete = !todo.isComplete;\r\n\t\t\t}\r\n\t\t\treturn todo;\r\n\t\t});\r\n\t\tsetTodos(updatedTodos);\r\n\t}\r\n\r\n    return (\r\n        <div>\r\n            <h1>To do List</h1>\r\n\t\t\t\t\t<TodoForm onSubmit={addTodo} />\r\n\t\t\t\t\t<Todo todos={todos} completeTodo={completeTodo} removeTodo ={removeTodo} \r\n\t\t\t\t\tupdateTodo={updateTodo}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TodoList\r\n"]},"metadata":{},"sourceType":"module"}