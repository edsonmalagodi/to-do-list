{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Malagodi\\\\Documents\\\\GitHub\\\\todo-list\\\\src\\\\components\\\\Todo.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport TodoList from './TodoList';\nimport { TiEdit } from 'react-icons/ti';\nimport { AiOutlineCloseCircle } from 'react-icons/ai';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Todo(_ref) {\n  _s();\n\n  let {\n    todos,\n    completeTodo,\n    removeTodo\n  } = _ref;\n  const [edit, setEdit] = useState({\n    id: null,\n    value: ''\n  });\n\n  const submitUpdate = value => {\n    updateTodo(edit.id, value);\n    setEdit({\n      id: null,\n      value: ''\n    });\n  };\n\n  return todos.map((todo, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: todo.isComplete ? 'todo-row complete' : 'todo-row',\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: () => completeTodo(todo.id),\n      children: todo.text\n    }, todo.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"icons\",\n      children: [/*#__PURE__*/_jsxDEV(AiOutlineCloseCircle, {\n        onClick: () => removeTodo(todo.id),\n        className: \"delete-icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(TiEdit, {\n        onClick: () => setEdit({\n          id: todo.id,\n          value: todo.text\n        }),\n        className: \"edit-icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 6\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }, this)]\n  }, index, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 4\n  }, this));\n}\n\n_s(Todo, \"3rNJDEpDssMZGWeGLhzEWY+aBqc=\");\n\n_c = Todo;\nexport default Todo;\n\nvar _c;\n\n$RefreshReg$(_c, \"Todo\");","map":{"version":3,"sources":["C:/Users/Malagodi/Documents/GitHub/todo-list/src/components/Todo.js"],"names":["React","useState","TodoList","TiEdit","AiOutlineCloseCircle","Todo","todos","completeTodo","removeTodo","edit","setEdit","id","value","submitUpdate","updateTodo","map","todo","index","isComplete","text"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,OAAOC,QAAP,MAAqB,YAArB;AAEA,SAASC,MAAT,QAAuB,gBAAvB;AACA,SAASC,oBAAT,QAAqC,gBAArC;;;AAEA,SAASC,IAAT,OAAmD;AAAA;;AAAA,MAApC;AAACC,IAAAA,KAAD;AAAQC,IAAAA,YAAR;AAAsBC,IAAAA;AAAtB,GAAoC;AAClD,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBT,QAAQ,CAAC;AAChCU,IAAAA,EAAE,EAAE,IAD4B;AAEhCC,IAAAA,KAAK,EAAE;AAFyB,GAAD,CAAhC;;AAKA,QAAMC,YAAY,GAAGD,KAAK,IAAI;AAC7BE,IAAAA,UAAU,CAACL,IAAI,CAACE,EAAN,EAAUC,KAAV,CAAV;AACAF,IAAAA,OAAO,CAAC;AACPC,MAAAA,EAAE,EAAE,IADG;AAEPC,MAAAA,KAAK,EAAE;AAFA,KAAD,CAAP;AAIA,GAND;;AAQG,SAAON,KAAK,CAACS,GAAN,CAAU,CAACC,IAAD,EAAOC,KAAP,kBAClB;AAAK,IAAA,SAAS,EAAED,IAAI,CAACE,UAAL,GAAkB,mBAAlB,GAChB,UADA;AAAA,4BAIC;AAAmB,MAAA,OAAO,EAAE,MAAMX,YAAY,CAACS,IAAI,CAACL,EAAN,CAA9C;AAAA,gBACEK,IAAI,CAACG;AADP,OAAUH,IAAI,CAACL,EAAf;AAAA;AAAA;AAAA;AAAA,YAJD,eAQC;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA,8BACC,QAAC,oBAAD;AACA,QAAA,OAAO,EAAE,MAAMH,UAAU,CAAEQ,IAAI,CAACL,EAAP,CADzB;AAEA,QAAA,SAAS,EAAC;AAFV;AAAA;AAAA;AAAA;AAAA,cADD,eAKC,QAAC,MAAD;AACA,QAAA,OAAO,EAAE,MAAMD,OAAO,CAAE;AAACC,UAAAA,EAAE,EAAEK,IAAI,CAACL,EAAV;AAAcC,UAAAA,KAAK,EAAEI,IAAI,CAACG;AAA1B,SAAF,CADtB;AAEA,QAAA,SAAS,EAAC;AAFV;AAAA;AAAA;AAAA;AAAA,cALD;AAAA;AAAA;AAAA;AAAA;AAAA,YARD;AAAA,KAEKF,KAFL;AAAA;AAAA;AAAA;AAAA,UADQ,CAAP;AAuBH;;GArCQZ,I;;KAAAA,I;AAuCT,eAAeA,IAAf","sourcesContent":["import React, { useState } from 'react';\r\n\r\nimport TodoList from './TodoList';\r\n\r\nimport { TiEdit } from 'react-icons/ti';\r\nimport { AiOutlineCloseCircle } from 'react-icons/ai';\r\n\r\nfunction Todo( {todos, completeTodo, removeTodo} ) {\r\n\tconst [edit, setEdit] = useState({\r\n\t\tid: null,\r\n\t\tvalue: ''\r\n\t});\t\r\n\r\n\tconst submitUpdate = value => {\r\n\t\tupdateTodo(edit.id, value)\r\n\t\tsetEdit({\r\n\t\t\tid: null,\r\n\t\t\tvalue: ''\r\n\t\t})\r\n\t}\r\n\r\n    return todos.map((todo, index) => (\r\n\t\t\t<div className={todo.isComplete ? 'todo-row complete' : \r\n\t\t\t'todo-row'} \r\n\t\t\tkey={index}>\r\n\r\n\t\t\t\t<div key={todo.id} onClick={() => completeTodo(todo.id)}>\r\n\t\t\t\t\t{todo.text}\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div className='icons'>\r\n\t\t\t\t\t<AiOutlineCloseCircle\r\n\t\t\t\t\tonClick={() => removeTodo (todo.id)}\r\n\t\t\t\t\tclassName='delete-icon'\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<TiEdit \r\n\t\t\t\t\tonClick={() => setEdit ({id: todo.id, value: todo.text })}\r\n\t\t\t\t\tclassName='edit-icon'\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t\r\n\t\t\t\t</div> \r\n\t\t\t\r\n\t\t\t</div>\r\n\t\t));\r\n}\r\n\r\nexport default Todo\r\n"]},"metadata":{},"sourceType":"module"}